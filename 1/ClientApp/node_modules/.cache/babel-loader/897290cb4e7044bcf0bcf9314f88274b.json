{"ast":null,"code":"import'bootstrap/dist/css/bootstrap.css';import*as React from'react';import*as ReactDOM from'react-dom';import{Provider}from'react-redux';import{ConnectedRouter}from'connected-react-router';import{createBrowserHistory}from'history';import configureStore from'./store/configureStore';import App from'./App';import registerServiceWorker from'./registerServiceWorker';// Create browser history to use in the Redux store\nimport{jsx as _jsx}from\"react/jsx-runtime\";var baseUrl=document.getElementsByTagName('base')[0].getAttribute('href');var history=createBrowserHistory({basename:baseUrl});// Get the application-wide store instance, prepopulating with state from the server where available.\nvar store=configureStore(history);console.log(baseUrl);ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(ConnectedRouter,{history:history,children:/*#__PURE__*/_jsx(App,{})})}),document.getElementById('root'));registerServiceWorker();","map":{"version":3,"names":["React","ReactDOM","Provider","ConnectedRouter","createBrowserHistory","configureStore","App","registerServiceWorker","baseUrl","document","getElementsByTagName","getAttribute","history","basename","store","console","log","render","getElementById"],"sources":["/Users/vandung31141/Projects/1/1/ClientApp/src/index.tsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Create browser history to use in the Redux store\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\nconst history = createBrowserHistory({ basename: baseUrl });\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst store = configureStore(history);\nconsole.log(baseUrl)\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root'));\n\nregisterServiceWorker();\n\n"],"mappings":"AAAA,MAAO,kCAAP,CAEA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,MAAO,GAAKC,SAAZ,KAA0B,WAA1B,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,eAAT,KAAgC,wBAAhC,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,MAAOC,eAAP,KAA2B,wBAA3B,CACA,MAAOC,IAAP,KAAgB,OAAhB,CACA,MAAOC,sBAAP,KAAkC,yBAAlC,CAEA;2CACA,GAAMC,QAAO,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAAzC,CAAsD,MAAtD,CAAhB,CACA,GAAMC,QAAO,CAAGR,oBAAoB,CAAC,CAAES,QAAQ,CAAEL,OAAZ,CAAD,CAApC,CAEA;AACA,GAAMM,MAAK,CAAGT,cAAc,CAACO,OAAD,CAA5B,CACAG,OAAO,CAACC,GAAR,CAAYR,OAAZ,EACAP,QAAQ,CAACgB,MAAT,cACI,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,uBACI,KAAC,eAAD,EAAiB,OAAO,CAAEF,OAA1B,uBACI,KAAC,GAAD,IADJ,EADJ,EADJ,CAMIH,QAAQ,CAACS,cAAT,CAAwB,MAAxB,CANJ,EAQAX,qBAAqB"},"metadata":{},"sourceType":"module"}